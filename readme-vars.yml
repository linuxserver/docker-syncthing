---

# project information
project_name: syncthing
project_url: "https://syncthing.net"
project_logo: "https://syncthing.net/images/logo-horizontal.svg"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet."
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# container parameters
common_param_env_vars_enabled: true #PGID, PUID, etc, you can set it to 'optional'
param_container_name: "{{ project_name }}"
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London." }
  - { env_var: "UMASK_SET", env_value: "<022>", desc: "Umask setting - [explanation](https://askubuntu.com/questions/44542/what-is-umask-and-how-does-it-work)" }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "</path/to/appdata/config>", desc: "Configuration files." }
  - { vol_path: "/data1", vol_host_path: "</path/to/data1>", desc: "Data1" }
  - { vol_path: "/data2", vol_host_path: "</path/to/data2>", desc: "Data2" }
param_usage_include_ports: true
param_ports:
  - { external_port: "8384", internal_port: "8384", port_desc: "Application WebUI" }
  - { external_port: "22000", internal_port: "22000", port_desc: "Listening port" }
  - { external_port: "21027", internal_port: "21027/udp", port_desc: "Protocol discovery" }

# application setup block
app_setup_block_enabled: true
app_setup_block: "**Note: ** The Syncthing devs highly suggest setting a password for this container as it listens on 0.0.0.0. To do this go to `Actions -> Settings -> set user/password` for the webUI."

app_setup_nginx_reverse_proxy_snippet: false
app_setup_nginx_reverse_proxy_block: ""
# changelog

changelogs:
  - { date: "28.06.19:", desc: "Rebasing to alpine 3.10." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "05.03.19:", desc: "Update Build process for v1.1.0 release." }
  - { date: "22.02.19:", desc: "Rebasing to alpine 3.9." }
  - { date: "16.01.19:", desc: "Add pipeline logic and multi arch." }
  - { date: "30.07.18:", desc: "Rebase to alpine 3.8 and use buildstage." }
  - { date: "13.12.17:", desc: "Rebase to alpine 3.7." }
  - { date: "25.10.17:", desc: "Add env for manual setting of umask." }
  - { date: "29.07.17:", desc: "Simplify build structure as symlinks failing on > 0.14.32" }
  - { date: "28.05.17:", desc: "Rebase to alpine 3.6." }
  - { date: "08.02.17:", desc: "Rebase to alpine 3.5." }
  - { date: "01.11.16:", desc: "Switch to compiling latest version from git source." }
  - { date: "14.10.16:", desc: "Add version layer information." }
  - { date: "30.09.16:", desc: "Fix umask." }
  - { date: "09.09.16:", desc: "Add layer badges to README." }
  - { date: "28.08.16:", desc: "Add badges to README." }
  - { date: "11.08.16:", desc: "Rebase to alpine linux." }
  - { date: "18.12.15:", desc: "Initial testing / release (IronicBadger)" }
  - { date: "24.09.15:", desc: "Inital dev complete (Lonix)" }
